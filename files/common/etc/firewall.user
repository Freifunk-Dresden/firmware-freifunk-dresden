# This file is interpreted as shell script.
# Put your custom iptables rules here, they will
# be executed with each firewall (re-)start.

# Internal uci firewall chains are flushed and recreated on reload, so
# put custom rules into the root chains e.g. INPUT or FORWARD or into the
# special user chains, e.g. input_wan_rule or postrouting_lan_rule.

eval $(/usr/bin/ddmesh-ipcalc.sh -n $(uci get ddmesh.system.node))

IPT=iptables

setup_splash() {
	# prepare splash
	
	WIFIADR=$(uci get ddmesh.network.wifi2_ip)
	eval $(ipcalc.sh $WIFIADR $(uci get ddmesh.network.wifi2_netmask))
	WIFIPRE=$PREFIX
	WIFI_IF=$(uci -P /var/state get network.wifi2.ifname)

	# table: nat
	$IPT -t nat -N SPLASH
	$IPT -t nat -N SPLASH_AUTH_USERS
	$IPT -t nat -N SPLASH_PUBLIC_SERVICES
	$IPT -t nat -A SPLASH -j SPLASH_AUTH_USERS
	$IPT -t nat -A SPLASH_AUTH_USERS -j SPLASH_PUBLIC_SERVICES
	
	$IPT -t nat -A SPLASH_AUTH_USERS -p tcp --dport 80 -j DNAT --to $WIFIADR:81 
	#force any manuell configured dns to this local dns
	$IPT -t nat -A SPLASH_AUTH_USERS -p udp --dport 53 -j DNAT --to $WIFIADR:53 

	$IPT -t nat -A prerouting_wifi2_rule -s $WIFIADR/$WIFIPRE -j SPLASH
	
	# table: filter
	$IPT -N SPLASH
	$IPT -N SPLASH_AUTH_USERS
	$IPT -N SPLASH_PUBLIC_SERVICES

	$IPT -A SPLASH -j SPLASH_AUTH_USERS
	$IPT -A SPLASH_AUTH_USERS -j SPLASH_PUBLIC_SERVICES
	$IPT -A SPLASH_PUBLIC_SERVICES -p icmp -j RETURN 
	$IPT -A SPLASH_PUBLIC_SERVICES -j DROP
	
	$IPT -A forwarding_wifi2_rule -s $WIFIADR/$WIFIPRE -j SPLASH
}

test "$(uci get ddmesh.system.disable_splash)" != "1" && setup_splash
