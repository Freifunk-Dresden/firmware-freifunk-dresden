####### docker ############

# re-create symlinks because gitlab removes it before starting each single job.
# /builds/dl is an empty directory created during docker image creation.
# This directory is used as mount point to pass in /mycache from host machine.
# I use this to avoid downloading/cloning from openwrt.org for each commit 
# to gitlab.freifunk-dresden.de
# "before_script" can be global or local to a job. but
# but then it is same as if I put the command just before build command.
# when "before_script" is global, then all global before_scripts are
# executed independent of any job or runner (without any tags)


#build:ar71xx.tiny:
#  image: openwrt-docker-build:latest
#  stage: build
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}-master
#    paths:
#    - dl/*
#  script:
#    - mkdir -p /mycache/dl
#    - ln -s /mycache/dl
#    - mkdir -p /mycache/workdir
#    - ln -s /mycache/workdir
#    - ./build.sh ar71xx.tiny -j6
#  artifacts:
#    paths:
#    - workdir/*/bin/targets/*
#  tags:
#  - docker


build:ar71xx.tiny:
  image: openwrt-docker-build:latest
  stage: build
  script:
    - mkdir -p /mycache/dl
    - ln -s /mycache/dl
    - mkdir -p /mycache/workdir
    - ln -s /mycache/workdir
    - ./build.sh ar71xx.tiny rerun -j6
  tags:
  - docker


build:ar71xx.generic:
  image: openwrt-docker-build:latest
  stage: build
  script:
    - mkdir -p /mycache/dl
    - ln -s /mycache/dl
    - mkdir -p /mycache/workdir
    - ln -s /mycache/workdir
    - ./build.sh ar71xx.generic rerun -j6
  tags:
  - docker


build:x86:
  image: openwrt-docker-build:latest
  stage: build
  script:
    - mkdir -p /mycache/dl
    - ln -s /mycache/dl
    - mkdir -p /mycache/workdir
    - ln -s /mycache/workdir
    - ./build.sh x86 rerun -j6
  tags:
  - docker


build:ramips:
  image: openwrt-docker-build:latest
  stage: build
  script:
    - mkdir -p /mycache/dl
    - ln -s /mycache/dl
    - mkdir -p /mycache/workdir
    - ln -s /mycache/workdir
    - ./build.sh ramips rerun -j6
  tags:
  - docker


build:lantiq:
  image: openwrt-docker-build:latest
  stage: build
  script:
    - mkdir -p /mycache/dl
    - ln -s /mycache/dl
    - mkdir -p /mycache/workdir
    - ln -s /mycache/workdir
    - ./build.sh lantiq rerun -j6
  tags:
  - docker


build:ipq40xx:
  image: openwrt-docker-build:latest
  stage: build
  script:
    - mkdir -p /mycache/dl
    - ln -s /mycache/dl
    - mkdir -p /mycache/workdir
    - ln -s /mycache/workdir
    - ./build.sh ipq40xx rerun -j6
  tags:
  - docker

# provide local generated files as artifacts
build:finish:
  image: openwrt-docker-build:latest
  stage: deploy 
  script:
    - mkdir -p /mycache/dl
    - ln -s /mycache/dl
    - mkdir -p /mycache/workdir
    - ln -s /mycache/workdir
    - ./gen-upload.sh all 
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 2 days
    paths:
    - final_output
  tags:
  - docker

